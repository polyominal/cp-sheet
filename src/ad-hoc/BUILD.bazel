load("//:rules.bzl", "my_cc_library", "my_cc_test")

my_cc_library(
    name = "floor-ceil-range",
    hdrs = ["floor-ceil-range.hpp"],
)

my_cc_test(
    name = "floor-ceil-range-test",
    srcs = ["floor-ceil-range-test.cpp"],
    deps = ["//src/ad-hoc:floor-ceil-range"],
)

my_cc_library(
    name = "monotone-minima",
    hdrs = ["monotone-minima.hpp"],
)

my_cc_library(
    name = "min-plus-convex",
    hdrs = ["min-plus-convex.hpp"],
    deps = [
        "//src/ad-hoc:monotone-minima",
    ],
)

my_cc_test(
    name = "min-plus-convex-test",
    srcs = ["min-plus-convex-test.cpp"],
    deps = [
        "//src/ad-hoc:min-plus-convex",
    ],
)

my_cc_library(
    name = "scary-product",
    hdrs = ["scary-product.hpp"],
)

my_cc_test(
    name = "scary-product-test",
    srcs = ["scary-product-test.cpp"],
    deps = ["//src/ad-hoc:scary-product"],
)

my_cc_library(
    name = "offline-query",
    hdrs = ["offline-query.hpp"],
)

my_cc_library(
    name = "segbeats",
    hdrs = ["segbeats.hpp"],
)

my_cc_library(
    name = "li-chao-tree",
    hdrs = ["li-chao-tree.hpp"],
)

my_cc_library(
    name = "monge-shortest-path",
    hdrs = ["monge-shortest-path.hpp"],
)

my_cc_library(
    name = "concave-shortest-path",
    hdrs = ["concave-shortest-path.hpp"],
)

my_cc_library(
    name = "palindromic-decomp-dp",
    hdrs = ["palindromic-decomp-dp.hpp"],
    deps = [
        "//src/string:eertree",
    ],
)

my_cc_library(
    name = "golden-section-search",
    hdrs = ["golden-section-search.hpp"],
)
